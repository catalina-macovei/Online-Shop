@model OnlineShop.Models.Product

<div class="container py-5">
    <h2 class="text-center">Add Product</h2>

    <div class="row">
        <div class="col-6 offset-3">
            <form class="d-flex flex-column gap-3 overflow-auto" method="post" enctype="multipart/form-data" action="/Products/New">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div>
                    @Html.Label("Title", "Product Name")

                    @Html.TextBox("Title", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.Label("Description", "Product Decription")

                    @Html.TextArea("Description", null, new { @class = "form-control"})
                    @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                </div>
                <div class="d-flex align-items-center justify-content-between">
                    <div >
                        @Html.Label("Price", "Price")

                        @Html.TextBox("Price", null, new { @class = "form-control" })
                        @Html.ValidationMessage("Price", null, new { @class = "text-danger" })
                    </div>
                    <div >
                        @Html.Label("Stock", "Stock")

                        @Html.TextBox("Stock", null, new { @class = "form-control" })
                        @Html.ValidationMessage("Stock", null, new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <label>Select Category</label>
                    @Html.DropDownListFor(m => m.CategoryId,
                    new SelectList(Model.Categories, "Value", "Text"),
                    "Select Category", new { @class = "form-control" })

                    @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
                </div>
                <div>
                    <div>
                        <label for="file">Upload Photo</label>
                        <input type="file" id="file" name="file" />

                    </div>
                    @Html.ValidationMessage("PhotoSrc", null, new { @class = "text-danger" })
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <button class="btn btn-outline" style="background-color:pink; color:black;" type="submit">Add Product</button>

                }
                @if (User.IsInRole("Collaborator"))
                {
                    <button class="btn btn-outline" style="background-color:pink; color:black;" type="submit">Request to Add</button>

                }
            </form>
        </div>
    </div>
</div>








